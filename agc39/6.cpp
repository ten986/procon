#include <bits/stdc++.h>

using namespace std;
typedef long long int LL;
typedef long long int ll;
typedef pair<long long int, long long int> pii;
typedef pair<double, double> pdd;

#define SORT(c) sort((c).begin(),(c).end())
#define BACKSORT(c) sort((c).begin(),(c).end(),std::greater<LL>())
#define FOR(i,a,b) for(LL i=(a);i<(b);++i)
#define REP(i,n)  FOR(i,0,n)
#define SP << " " <<

LL mod = 998244353;

int main()
{
  cin.tie(0);
  ios::sync_with_stdio(false);
  
  //3
  
  LL M;
  cin >> M;

  LL sum = 0;

  LL xxx = 0;

  REP(i,M+1){
    bitset<19> a(i);
    bitset<19> b(i);
    LL cnt = 0;
    while (true)
    {
      cnt++;
      bool x = b[0];
      b >>= 1;
      b[18] = !x;
      if(a==b){
        break;
      }
    }
    sum += cnt;
    sum %= mod;

    if(i==0){
      xxx = cnt;
    }else{
      if(cnt!=xxx){
        // cout << a SP cnt << endl;
      }
    }
  }
  sum %= mod;
  cout << sum << endl;
}
// 1000000
// 00001111000011110000 8
// 00011110000111100001 8
// 00101101001011010010 8
// 00111100001111000011 8
// 01001011010010110100 8
// 01011010010110100101 8
// 01101001011010010110 8
// 01111000011110000111 8
// 10000111100001111000 8
// 10010110100101101001 8
// 10100101101001011010 8
// 10110100101101001011 8
// 11000011110000111100 8
// 11010010110100101101 8
// 11100001111000011110 8
// 11110000111100001111 8
// 500000
// 0101010101010101010 2
// 1010101010101010101 2
// 250000
// 000000111111000000 12
// 000001111110000001 12
// 000010111101000010 12
// 000011111100000011 12
// 000100111011000100 12
// 000101111010000101 12
// 000110111001000110 12
// 000111111000000111 12
// 001000110111001000 12
// 001001110110001001 12
// 001010110101001010 12
// 001011110100001011 12
// 001100110011001100 4
// 001101110010001101 12
// 001110110001001110 12
// 001111110000001111 12
// 010000101111010000 12
// 010001101110010001 12
// 010010101101010010 12
// 010011101100010011 12
// 010100101011010100 12
// 010101101010010101 12
// 010110101001010110 12
// 010111101000010111 12
// 011000100111011000 12
// 011001100110011001 4
// 011010100101011010 12
// 011011100100011011 12
// 011100100011011100 12
// 011101100010011101 12
// 011110100001011110 12
// 011111100000011111 12
// 100000011111100000 12
// 100001011110100001 12
// 100010011101100010 12
// 100011011100100011 12
// 100100011011100100 12
// 100101011010100101 12
// 100110011001100110 4
// 100111011000100111 12
// 101000010111101000 12
// 101001010110101001 12
// 101010010101101010 12
// 101011010100101011 12
// 101100010011101100 12
// 101101010010101101 12
// 101110010001101110 12
// 101111010000101111 12
// 110000001111110000 12
// 110001001110110001 12
// 110010001101110010 12
// 110011001100110011 4
// 110100001011110100 12
// 110101001010110101 12
// 110110001001110110 12
// 110111001000110111 12
// 111000000111111000 12
// 111001000110111001 12
// 111010000101111010 12
// 111011000100111011 12
// 111100000011111100 12
